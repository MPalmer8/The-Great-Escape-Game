#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ and\ Matthew\ Palmer\ K21005255\r\n\ @version\ 2016.02.29\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=name
comment10.target=Item\ getItemObject(java.lang.String)
comment10.text=\r\n\ Gets\ an\ Item\ object\ from\ the\ itemsList\ ArrayList\ using\ the\ name\ String\r\n\ @param\ String\ name\r\n\ @return\ Item\ Object\r\n
comment11.params=character
comment11.target=void\ addCharacter(Character)
comment11.text=\r\n\ Adds\ a\ Character\ to\ the\ room\r\n\ @param\ Character\ Object\r\n
comment12.params=character
comment12.target=void\ removeCharacter(Character)
comment12.text=\r\n\ Removes\ a\ Character\ from\ the\ room\r\n\ @param\ Character\ Object\r\n
comment13.params=
comment13.target=java.lang.String\ displayCharacters()
comment13.text=\r\n\ Displays\ the\ characters\ that\ are\ in\ the\ room\ by\ using\ the\ the\ characterList\ ArrayList\r\n\ @return\ String\ object\ containing\ the\ Characters\ present\ in\ the\ room\r\n
comment14.params=name
comment14.target=Character\ getCharacterObject(java.lang.String)
comment14.text=\r\n\ Gets\ a\ character\ object\ by\ using\ the\ name\ string\r\n\ @param\ String\ name\r\n\ @return\ Character\ Object\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment6.params=direction
comment6.target=Room\ getExit(java.lang.String)
comment6.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment7.params=item
comment7.target=void\ addItem(Item)
comment7.text=\r\n\ Adds\ an\ Item\ object\ into\ the\ itemsList\ Arraylist\r\n\ @param\ Item\ object\r\n
comment8.params=item
comment8.target=void\ removeItem(Item)
comment8.text=\r\n\ Remove\ an\ item\ from\ the\ room\r\n\ @param\ Item\ object\r\n
comment9.params=
comment9.target=java.lang.String\ displayItems()
comment9.text=\r\n\ Return\ a\ string\ describing\ the\ items\ in\ the\ room,\ e.g.\ "Items\:\ plate\ ".\r\n\ @return\ A\ list\ of\ the\ items\ in\ a\ particular\ room.\ \r\n
numComments=15
